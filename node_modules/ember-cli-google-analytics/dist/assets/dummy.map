{"version":3,"sources":["dummy/app.js","dummy/initializers/app-version.js","dummy/initializers/export-application-global.js","dummy/mixins/google-pageview.js","dummy/router.js","dummy/templates/application.js","dummy/tests/app.jshint.js","dummy/tests/dummy/app.jscs-test.js","dummy/tests/dummy/initializers/app-version.jscs-test.js","dummy/tests/dummy/initializers/export-application-global.jscs-test.js","dummy/tests/dummy/mixins/google-pageview.jscs-test.js","dummy/tests/dummy/router.jscs-test.js","dummy/tests/dummy/tests/helpers/resolver.jscs-test.js","dummy/tests/dummy/tests/helpers/start-app.jscs-test.js","dummy/tests/dummy/tests/test-helper.jscs-test.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/router.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","vendor/ember-cli/app-suffix.js"],"sourcesContent":["define('dummy/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'dummy/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('dummy/initializers/app-version', ['exports', 'dummy/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function (container, application) {\n      var appName = classify(application.toString());\n      Ember['default'].libraries.register(appName, config['default'].APP.version);\n    }\n  };\n\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal) {\n      window[classifiedName] = application;\n    }\n  };\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('dummy/mixins/google-pageview', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, ENV) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n    pageviewToGA: (function () {\n      if (Ember['default'].get(ENV['default'], \"googleAnalytics.webPropertyId\") != null) {\n        var trackerType = Ember['default'].getWithDefault(ENV['default'], \"googleAnalytics.tracker\", \"analytics.js\");\n\n        if (trackerType === \"analytics.js\") {\n          var globalVariable = Ember['default'].getWithDefault(ENV['default'], \"googleAnalytics.globalVariable\", \"ga\");\n\n          window[globalVariable](\"send\", \"pageview\", {\n            page: this.get(\"url\"),\n            title: this.get(\"url\")\n          });\n        } else if (trackerType === \"ga.js\") {\n          window._gaq.push([\"_trackPageview\"]);\n        }\n      }\n    }).on(\"didTransition\")\n  });\n\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {});\n\n  exports['default'] = Router;\n\n});","define('dummy/templates/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\n  helpers = this.merge(helpers, Ember['default'].Handlebars.helpers); data = data || {};\n    var buffer = '', stack1;\n\n\n    data.buffer.push(\"<h2 id=\\\"title\\\">Welcome to Ember.js</h2>\\n\\n\");\n    stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n    if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n    data.buffer.push(\"\\n\");\n    return buffer;\n    \n  });\n\n});","define('dummy/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/dummy/app.jscs-test', function () {\n\n  'use strict';\n\n  module(\"JSCS - dummy\");\n  test(\"dummy/app.js should pass jscs\", function () {\n    ok(true, \"dummy/app.js should pass jscs.\");\n  });\n\n});","define('dummy/tests/dummy/initializers/app-version.jscs-test', function () {\n\n  'use strict';\n\n  module(\"JSCS - dummy/initializers\");\n  test(\"dummy/initializers/app-version.js should pass jscs\", function () {\n    ok(true, \"dummy/initializers/app-version.js should pass jscs.\");\n  });\n\n});","define('dummy/tests/dummy/initializers/export-application-global.jscs-test', function () {\n\n  'use strict';\n\n  module(\"JSCS - dummy/initializers\");\n  test(\"dummy/initializers/export-application-global.js should pass jscs\", function () {\n    ok(true, \"dummy/initializers/export-application-global.js should pass jscs.\");\n  });\n\n});","define('dummy/tests/dummy/mixins/google-pageview.jscs-test', function () {\n\n  'use strict';\n\n  module(\"JSCS - dummy/mixins\");\n  test(\"dummy/mixins/google-pageview.js should pass jscs\", function () {\n    ok(true, \"dummy/mixins/google-pageview.js should pass jscs.\");\n  });\n\n});","define('dummy/tests/dummy/router.jscs-test', function () {\n\n  'use strict';\n\n  module(\"JSCS - dummy\");\n  test(\"dummy/router.js should pass jscs\", function () {\n    ok(true, \"dummy/router.js should pass jscs.\");\n  });\n\n});","define('dummy/tests/dummy/tests/helpers/resolver.jscs-test', function () {\n\n  'use strict';\n\n  module(\"JSCS - dummy/tests/helpers\");\n  test(\"dummy/tests/helpers/resolver.js should pass jscs\", function () {\n    ok(true, \"dummy/tests/helpers/resolver.js should pass jscs.\");\n  });\n\n});","define('dummy/tests/dummy/tests/helpers/start-app.jscs-test', function () {\n\n  'use strict';\n\n  module(\"JSCS - dummy/tests/helpers\");\n  test(\"dummy/tests/helpers/start-app.js should pass jscs\", function () {\n    ok(true, \"dummy/tests/helpers/start-app.js should pass jscs.\");\n  });\n\n});","define('dummy/tests/dummy/tests/test-helper.jscs-test', function () {\n\n  'use strict';\n\n  module(\"JSCS - dummy/tests\");\n  test(\"dummy/tests/test-helper.js should pass jscs\", function () {\n    ok(true, \"dummy/tests/test-helper.js should pass jscs.\");\n  });\n\n});","define('dummy/tests/helpers/resolver', ['exports', 'ember/resolver', 'dummy/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('dummy/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/router', 'dummy/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('dummy/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('dummy/tests/test-helper', ['dummy/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('dummy/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"dummy/tests/test-helper\");\n} else {\n  require(\"dummy/app\")[\"default\"].create({\"name\":\"ember-cli-google-analytics\",\"version\":\"1.3.1.37026be6\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}